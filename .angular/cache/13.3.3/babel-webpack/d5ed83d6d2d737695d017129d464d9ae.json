{"ast":null,"code":"import { LoginUsuario } from '../modelos/login-usuario';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../servicios/auth.service\";\nimport * as i2 from \"../servicios/token.service\";\nimport * as i3 from \"express\";\nimport * as i4 from \"@angular/common\";\n\nfunction BotonesCrudComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"button\");\n    i0.ɵɵelement(2, \"img\", 2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\");\n    i0.ɵɵelement(4, \"img\", 3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\");\n    i0.ɵɵelement(6, \"img\", 4);\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction BotonesCrudComponent_ng_template_1_Template(rf, ctx) {}\n\nexport let BotonesCrudComponent = /*#__PURE__*/(() => {\n  class BotonesCrudComponent {\n    constructor(authService, tokenService, router) {\n      this.authService = authService;\n      this.tokenService = tokenService;\n      this.router = router;\n      this.form = {};\n      this.isLogged = false;\n      this.isLoginFail = false;\n      this.roles = [];\n      this.errorMsg = '';\n    }\n\n    ngOnInit() {\n      if (this.tokenService.getToken()) {\n        this.isLogged = true;\n        this.isLoginFail = false;\n        this.roles = this.tokenService.getAuthorities();\n      }\n    }\n\n    onLogin() {\n      this.usuario = new LoginUsuario(this.form.nombreUsuario, this.form.password);\n      this.authService.login(this.usuario).subscribe({\n        next: data => {\n          this.tokenService.setToken(data.token);\n          this.tokenService.setUserName(data.nombreUsuario);\n          this.tokenService.setAuthorities(data.authorities);\n          this.isLogged = true;\n          this.isLoginFail = false;\n          this.roles = this.tokenService.getAuthorities();\n          window.location.reload();\n        },\n        error: err => {\n          this.isLogged = false;\n          this.isLoginFail = true;\n          this.errorMsg = err.error.message;\n        }\n      });\n    }\n\n  }\n\n  BotonesCrudComponent.ɵfac = function BotonesCrudComponent_Factory(t) {\n    return new (t || BotonesCrudComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.TokenService), i0.ɵɵdirectiveInject(i3.Router));\n  };\n\n  BotonesCrudComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: BotonesCrudComponent,\n    selectors: [[\"app-botones-crud\"]],\n    decls: 3,\n    vars: 2,\n    consts: [[4, \"ngIf\", \"ngIfElse\"], [\"loggedOut\", \"\"], [\"src\", \"\\\\assets\\\\img\\\\lapiz.png\", \"width\", \"60px\"], [\"src\", \"\\\\assets\\\\img\\\\boton-eliminar.png\", \"width\", \"60px\"], [\"src\", \"\\\\assets\\\\img\\\\anadir.png\", \"width\", \"60px\"]],\n    template: function BotonesCrudComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, BotonesCrudComponent_div_0_Template, 7, 0, \"div\", 0);\n        i0.ɵɵtemplate(1, BotonesCrudComponent_ng_template_1_Template, 0, 0, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n      }\n\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(2);\n\n        i0.ɵɵproperty(\"ngIf\", ctx.isLogged)(\"ngIfElse\", _r1);\n      }\n    },\n    directives: [i4.NgIf],\n    styles: [\"\"]\n  });\n  return BotonesCrudComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}